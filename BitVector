function BitVector(size) {
    return new Uint32Array(Math.floor(size / 32));
}
let vector = new BitVector(200);
function set(number, vector) {
    let index = Math.floor(number / 32);
    vector[index] = vector[index] | (1 << (number % 32));
    return vector;
}
function reset(number, vector) {
    let index = Math.floor(number / 32);
    vector[index] = vector[index] & ~(1 << (number % 32));
    return vector;
}
function get(number, vector) {
    let index = Math.floor(number / 32);
    let value = vector[index] & (1 << (number % 32));
    return value ? true : false;
}
console.log(set(5,vector))
console.log(set(10,vector))
console.log(set(25,vector))
console.log(reset(5,vector))
console.log(get(5, vector));
console.log(get(10, vector));
